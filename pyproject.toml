[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "egohub"
version = "0.1.0"
description = "A unified library for egocentric perception."
authors = [
    { name = "James Ball", email = "james@ball-family.com" },
]
license = { file = "LICENSE.txt" }
readme = "README.md"
requires-python = "~=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "h5py",
    "hydra-core",
    "numpy",
    "torch",
    "torchvision",
    "pyyaml",
    "einops",
]

[project.optional-dependencies]
dev = [
    "egohub[all]",
    "ruff",
    "black",
    "pytest",
    "pytest-regressions",
]
all = [
    "opencv-python",
    "rerun-sdk",
    "scikit-learn",
    "timm",
    "tqdm",
    "transformers",
    "ultralytics",
]
# For the temporal consistency post-processing
temporal = [
    "cupy-cuda11x"
]

[project.urls]
"Homepage" = "https://github.com/jleball/egohub"
"Bug Tracker" = "https://github.com/jleball/egohub/issues"

[project.scripts]
egohub = "egohub.cli.main:main"

[tool.setuptools.packages.find]
include = ["egohub*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
# Enable most strict checks for better type safety
strict = true
# Don't fail on third-party libraries that lack type hints
ignore_missing_imports = true
# Exclude folders that are not part of our source tree
exclude = ["next/"]

[tool.ruff]
# Match black line-length for consistency
line-length = 88
target-version = "py39"
# Enable a broad set of useful rules:
# E, F: pycodestyle & pyflakes (core)
# W: pycodestyle warnings
# I: isort (import sorting)
# C90: McCabe complexity
# N: pep8-naming
lint.select = ["E", "F", "W", "I", "C90", "N"]

[tool.ruff.lint.isort]
# Tell isort that `egohub` is a first-party import
known-first-party = ["egohub"]

[tool.ruff.format]
# Opt-in to the formatter, which is currently in preview.
preview = true

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250516",
]

[tool.ruff.lint.per-file-ignores]
"egohub/rerun_log_utils.py" = ["F821", "F722"] 
