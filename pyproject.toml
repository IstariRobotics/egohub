[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "egohub"
version = "0.1.0"
description = "A toolkit for egocentric data processing, conversion, and visualization."
authors = [{ name = "James Ball", email = "james@istarirobotics.com" }]
license = { text = "MIT Custom" }
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "h5py",
    "numpy==1.26.4",
    "opencv-python",
    "Pillow",
    "PyYAML",
    "rerun-sdk==0.16.0",
    "scipy",
    "timm",
    "torch",
    "transformers",
    "tqdm",
    "accelerate",
    "einops",
    "jaxtyping"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov",
    "pytest-xdist",
    "pytest-regressions",
    "ruff",
    "hypothesis",
    "codecov",
    "typer[all]",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit",
]
pose = [
    "openmim",
    "mmpose",
]
full = [
    "open3d>=0.17.0",
    "torchvision",
    "torchaudio",
    "transformers",
    "accelerate",
    "matplotlib",
    "openmim",
    "mmpose",
]

[project.urls]
"Homepage" = "https://github.com/istarirobotics/egohub"

[project.scripts]
egohub = "egohub.cli.main:main"

[tool.setuptools.packages.find]
include = ["egohub*"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
# Enable most strict checks for better type safety
strict = true
# Don't fail on third-party libraries that lack type hints
ignore_missing_imports = true
# Exclude folders that are not part of our source tree
exclude = ["next/"]

[tool.ruff]
# Match black line-length for consistency
line-length = 88
# Enable a broad set of useful rules:
# E, F: pycodestyle & pyflakes (core)
# W: pycodestyle warnings
# I: isort (import sorting)
# C90: McCabe complexity
# N: pep8-naming
lint.select = ["E", "F", "W", "I", "C90", "N"]

[tool.ruff.lint.isort]
# Tell isort that `egohub` is a first-party import
known-first-party = ["egohub"]

[tool.ruff.format]
# Opt-in to the formatter, which is currently in preview.
preview = true

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250516",
]

[tool.ruff.lint.per-file-ignores]
"egohub/rerun_log_utils.py" = ["F821", "F722"] 
